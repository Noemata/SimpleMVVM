<Page
    x:Class="SimpleMVVM.Views.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:SimpleMVVM.Views"
    xmlns:winui="using:Microsoft.UI.Xaml.Controls"
    xmlns:viewModels="using:SimpleMVVM.ViewModels"
    xmlns:converters="using:SimpleMVVM.Converters"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:ic="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ui="using:SimpleMVVM.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>
        <converters:BoolToVisibilityConverter x:Name="BoolToVisibilityConverter"/>
    </Page.Resources>
    
    <Page.DataContext>
        <viewModels:ShellViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Grid>
        <winui:NavigationView x:Name="NavigationView"
                              Header="{x:Bind ViewModel.Header, Mode=OneWay}"
                              IsBackButtonVisible="Collapsed"
                              Background="Transparent"
                              PaneDisplayMode="LeftCompact"
                              IsSettingsVisible="False">
            <i:Interaction.Behaviors>
                <ui:EventToCommandBehavior 
                            Event="ItemInvoked"
                            Command="{x:Bind ViewModel.ItemInvokedCommand}" 
                            PassArguments="true"/>
            </i:Interaction.Behaviors>
            
            <winui:NavigationView.MenuItems>
                
                <winui:NavigationViewItem Icon="Home" Content="Home" IsEnabled="{x:Bind ViewModel.NotInSetup, Mode=OneWay}" />

                <winui:NavigationViewItem Icon="Important" Content="About" IsEnabled="{x:Bind ViewModel.NotInSetup, Mode=OneWay}" />
                
            </winui:NavigationView.MenuItems>

            <!-- Note: PassArguments="false" causes sender to be passed to ViewModel (very handy) -->
            <Frame x:Name="ContentFrame" x:FieldModifier="Public" Padding="16 0" >
                <i:Interaction.Behaviors>
                    <ui:EventToCommandBehavior 
                            Event="Loaded"
                            Command="{x:Bind ViewModel.FrameLoadedCommand}" 
                            PassArguments="false"/>
                </i:Interaction.Behaviors>
                <Frame.ContentTransitions>
                    <TransitionCollection>
                        <NavigationThemeTransition>
                            <NavigationThemeTransition.DefaultNavigationTransitionInfo>
                                <DrillInNavigationTransitionInfo />
                            </NavigationThemeTransition.DefaultNavigationTransitionInfo>
                        </NavigationThemeTransition>
                    </TransitionCollection>
                </Frame.ContentTransitions>
            </Frame>
        </winui:NavigationView>
        <!--
        WinUI 2.4 and up has broken how the footer previously worked :-(
        So we resort to this nonesense.  Why a toggle?  To have a different setup
        for each page selected.  Complex apps need this else you get lost in setup
        tabs and can't relate your setup action back to where you were working.
        -->
        <Grid VerticalAlignment="Bottom">
            <ToggleButton CornerRadius="0"
                          Width="40"
                          Click="{x:Bind ViewModel.OnSettings, Mode=OneWay}"
                          IsChecked="{x:Bind ViewModel.IsSetting, Mode=TwoWay}">
                <FontIcon Glyph="&#xE115;"/>
            </ToggleButton>
        </Grid>
        <Grid Background="DarkGray" Opacity="0.5" Visibility="{x:Bind ViewModel.IsBusy, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}">
            <ProgressRing Visibility="{x:Bind ViewModel.IsBusy, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" IsActive="{x:Bind ViewModel.IsBusy, Mode=OneWay}" Width="200" Height="200" />
        </Grid>
    </Grid>
</Page>
